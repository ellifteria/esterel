#lang rhombus
import:
  esterel/full open


// This is a translation of the code in 1.6 of
// _Compiling Esterel_; the test cases are as
// given in figure 1.2

def_signal: A B R O

def abro:
  esterel:
    loop:
      await ¿A || await ¿B
      emit(O)
      ~each ¿R

/*
with_signal {A, B ~combine +, C}:
  body

with_trap t:
  body

par
| await ¿(A)
  await ¿(B)
| await ¿(C)

with_signal:
  def A = new_sig()
  sig B
  sig C
  ....
*/

/*
(module+ test
  (define (react/o? #:emit [signals '()])
    (hash-ref (react! abro #:emit signals) O #f))
  (require rackunit)

  (check-equal? (react/o?)                     #f)
  (check-equal? (react/o? #:emit (list A B))   #t)
  (check-equal? (react/o? #:emit (list A))     #f)
  (check-equal? (react/o? #:emit (list R))     #f)
  (check-equal? (react/o? #:emit (list A))     #f)
  (check-equal? (react/o? #:emit (list B))     #t)
  (check-equal? (react/o? #:emit (list A B R)) #f))
*/