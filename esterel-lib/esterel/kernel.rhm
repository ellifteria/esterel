#lang rhombus/static/and_meta
import:
  lib("esterel/kernel.rkt"):
    expose #{present?}
  lib("esterel/private/kernel.rkt") as pkernel:
    expose #{mk-signal.args}
    expose #{esterel/proc}
    expose #{par/proc}
  lib("syntax/location.rkt"):
    expose #{quote-srcloc}

export:
  def_signal
  esterel
  ¿
  ||
  emit
  react

defn.macro 'def_signal: $id ...':
  def [srclocs, ...] = [expr_meta.pack_s_exp(['#{quote-srcloc}',id]), ...]
  'def $id : #{mk-signal.args}(#'$id, #false, $srclocs)
   ...'

expr.macro 'esterel:
              $body
              ...':
  '#{esterel/proc}(0,
                   fun ():
                     $body
                     ...)'

operator ¿ x:
  ~stronger_than ||
  #{present?}(x)

expr.macro '$left || $right':
  '#{par/proc}([fun (): $left, fun(): $right])'

fun emit(s):
  kernel.emit(s)

fun react(r, ~emit: signals = []):
  kernel.#{react!}(r, ~emit: signals)